suppressMessages(library(rvest))
suppressMessages(library(tidyverse))
suppressMessages(library(lubridate))
url_a <- "https://en.wikipedia.org/wiki/COVID-19_pandemic_cases"
html_a <- read_html(url_a)
tables_a <- html_table(html_a, fill = TRUE)
length(tables_a)
cases_by_country_table <- url_a %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div[1]/table[3]') %>%
html_table(fill=TRUE)
cases_by_country_table <- cases_by_country_table[[1]] #extracts the first element from the list
head(cases_by_country_table)
#3.1
cases_by_country_table <- cases_by_country_table[-c(1:4),-c(2)] #Drops the first rows and the first case column
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "Date"] <- "Country"
#3.2 delete commas and convert to numeric
for(i in 2:11){
cases_by_country_table[,i] <-  as.numeric(gsub(",", "", cases_by_country_table[,i] )) #followed method from the lecture
}
#3.3
#cases_by_country_table_test <- cases_by_country_table
cases_by_country_table <- cases_by_country_table %>%
pivot_longer(
cols = -Country,
names_to = c('Date'),
#names_prefix = "X",
#names_sep = '.Q',
values_to = "Cases"
)
head(cases_by_country_table)
cases_by_country_table$Year <- '2020'
cases_by_country_table_test <- cases_by_country_table
#separate the column by whitespace
cases_by_country_table_test <- separate(data = cases_by_country_table_test, col = Date, into = c("Month", "Day"))
cases_by_country_table_test$FullDate <- paste(cases_by_country_table_test$Year,cases_by_country_table_test$Month,cases_by_country_table_test$Day,sep="-")
head(cases_by_country_table_test)
cases_by_country_table_test$FullDate2 <- as.Date(cases_by_country_table_test$FullDate, format = "%Y-%m/%d")
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
cases_by_country_table_test$FullDate2 <- as.Date(cases_by_country_table_test$FullDate, format = "%Y-%m/-%d")
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
cases_by_country_table_test$FullDate2 <- as.Date(cases_by_country_table_test$FullDate, format = "%Y-%m-%d")
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
cases_by_country_table_test$FullDate <-
paste(cases_by_country_table_test$Year,cases_by_country_table_test$Month,cases_by_country_table_test$Day,sep="")
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
cases_by_country_table_test$FullDate2 <- as.Date(cases_by_country_table_test$FullDate, format = "%Y%m%d")
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
cases_by_country_table_test$FullDate <-
paste(cases_by_country_table_test$Year,cases_by_country_table_test$Month,cases_by_country_table_test$Day,sep="/")
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
View(cases_by_country_table_test)
View(cases_by_country_table_test)
match(cases_by_country_table$Month,month.abb)
cases_by_country_table$Month
cases_by_country_table_test$Month
match(cases_by_country_table_test$Month,month.abb)
cases_by_country_table_test$Month <- match(cases_by_country_table_test$Month,month.abb)
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test,20)
cases_by_country_table_test$FullDate <-
paste(cases_by_country_table_test$Year,cases_by_country_table_test$Month,cases_by_country_table_test$Day,sep="/")
cases_by_country_table_test$FullDate2 <- as.Date(cases_by_country_table_test$FullDate, format = "%Y%m%d")
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
cases_by_country_table_test <- cases_by_country_table
#separate the column by whitespace
cases_by_country_table_test <- separate(data = cases_by_country_table_test, col = Date, into = c("Month", "Day"))
cases_by_country_table_test$Month <- match(cases_by_country_table_test$Month,month.abb)
cases_by_country_table_test$FullDate <-
paste(cases_by_country_table_test$Year,cases_by_country_table_test$Month,cases_by_country_table_test$Day,sep="/")
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
cases_by_country_table_test$FullDate2 <- as.Date(cases_by_country_table_test$FullDate, format = "%Y/%m/%d")
#rhpi_long_date$Date <- as.Date(rhpi_long_date$YearQuarter, format = "%Y%q")
head(cases_by_country_table_test)
cases_by_country_table_test[,-c(2,3,6)]
head(cases_by_country_table_test)
cases_by_country_table_test[,-c(2,3,5,6)]
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "FullDate2"] <- "Date"
head(cases_by_country_table_test)
colnames(cases_by_country_table_test)[colnames(cases_by_country_table_test) == "FullDate2"] <- "Date"
head(cases_by_country_table_test)
url_a <- "https://en.wikipedia.org/wiki/COVID-19_pandemic_cases"
html_a <- read_html(url_a)
tables_a <- html_table(html_a, fill = TRUE)
length(tables_a)
cases_by_country_table <- url_a %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div[1]/table[3]') %>%
html_table(fill=TRUE)
cases_by_country_table <- cases_by_country_table[[1]] #extracts the first element from the list
head(cases_by_country_table)
#3.1
cases_by_country_table <- cases_by_country_table[-c(1:4),-c(2)] #Drops the first rows and the first case column
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "Date"] <- "Country"
#3.2 delete commas and convert to numeric
for(i in 2:11){
cases_by_country_table[,i] <-  as.numeric(gsub(",", "", cases_by_country_table[,i] )) #followed method from the lecture
}
#3.3
#cases_by_country_table_test <- cases_by_country_table
cases_by_country_table <- cases_by_country_table %>%
pivot_longer(
cols = -Country,
names_to = c('Date'),
#names_prefix = "X",
#names_sep = '.Q',
values_to = "Cases"
)
head(cases_by_country_table)
cases_by_country_table$Year <- '2020'
cases_by_country_table_test <- cases_by_country_table
#separate the column by whitespace
cases_by_country_table_test <- separate(data = cases_by_country_table_test, col = Date, into = c("Month", "Day"))
cases_by_country_table_test$Month <- match(cases_by_country_table_test$Month,month.abb)
cases_by_country_table_test$FullDate <-
paste(cases_by_country_table_test$Year,cases_by_country_table_test$Month,cases_by_country_table_test$Day,sep="/")
cases_by_country_table_test$FullDate2 <- as.Date(cases_by_country_table_test$FullDate, format = "%Y/%m/%d")
cases_by_country_table_test <- cases_by_country_table_test[,-c(2,3,5,6)]
colnames(cases_by_country_table_test)[colnames(cases_by_country_table_test) == "FullDate2"] <- "Date"
head(cases_by_country_table_test)
#datetime.strptime(cases_by_country_table_test[1,2],"2020 %m %d")
#as_datetime(cases_by_country_table_test$Date)
cases_by_country_table_test <- cases_by_country_table_test[c(1,3,2)]
head(cases_by_country_table_test)
url_a <- "https://en.wikipedia.org/wiki/COVID-19_pandemic_cases"
html_a <- read_html(url_a)
tables_a <- html_table(html_a, fill = TRUE)
length(tables_a)
cases_by_country_table <- url_a %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div[1]/table[3]') %>%
html_table(fill=TRUE)
cases_by_country_table <- cases_by_country_table[[1]] #extracts the first element from the list
head(cases_by_country_table)
#3.1
cases_by_country_table <- cases_by_country_table[-c(1:4),-c(2)] #Drops the first rows and the first case column
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "Date"] <- "Country"
#3.2 delete commas and convert to numeric
for(i in 2:11){
cases_by_country_table[,i] <-  as.numeric(gsub(",", "", cases_by_country_table[,i] )) #followed method from the lecture
}
#3.3
#cases_by_country_table_test <- cases_by_country_table
cases_by_country_table <- cases_by_country_table %>%
pivot_longer(
cols = -Country,
names_to = c('Date'),
#names_prefix = "X",
#names_sep = '.Q',
values_to = "Cases"
)
head(cases_by_country_table)
cases_by_country_table$Year <- '2020'
#separate the column by whitespace
cases_by_country_table<- separate(data = cases_by_country_table, col = Date, into = c("Month", "Day"))
cases_by_country_table$Month <- match(cases_by_country_table$Month,month.abb)
cases_by_country_table$FullDate <-
paste(cases_by_country_table$Year,cases_by_country_table$Month,cases_by_country_table$Day,sep="/")
cases_by_country_table$FullDate2 <- as.Date(cases_by_country_table$FullDate, format = "%Y/%m/%d")
cases_by_country_table <- cases_by_country_table[,-c(2,3,5,6)]
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "FullDate2"] <- "Date"
cases_by_country_table <- cases_by_country_table[c(1,3,2)]
head(cases_by_country_table)
cases_by_country_table_test<-cases_by_country_table
cases_by_country_table_test<-cases_by_country_table
cases_by_country_table_test<-cases_by_country_table
arrange(cases_by_country_table_test, Country, Date)
head(cases_by_country_table_test)
cases_by_country_table_test<-cases_by_country_table
cases_by_country_table_test <- arrange(cases_by_country_table_test, Country, Date)
head(cases_by_country_table_test)
suppressMessages(library(rvest))
suppressMessages(library(tidyverse))
suppressMessages(library(lubridate))
url_a <- "https://en.wikipedia.org/wiki/COVID-19_pandemic_cases"
html_a <- read_html(url_a)
tables_a <- html_table(html_a, fill = TRUE)
length(tables_a)
cases_by_country_table <- url_a %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div[1]/table[3]') %>%
html_table(fill=TRUE)
cases_by_country_table <- cases_by_country_table[[1]] #extracts the first element from the list
head(cases_by_country_table)
#3.1
cases_by_country_table <- cases_by_country_table[-c(1:4),-c(2)] #Drops the first rows and the first case column
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "Date"] <- "Country"
#3.2 delete commas and convert to numeric
for(i in 2:11){
cases_by_country_table[,i] <-  as.numeric(gsub(",", "", cases_by_country_table[,i] )) #followed method from the lecture
}
#3.3
#cases_by_country_table_test <- cases_by_country_table
cases_by_country_table <- cases_by_country_table %>%
pivot_longer(
cols = -Country,
names_to = c('Date'),
#names_prefix = "X",
#names_sep = '.Q',
values_to = "Cases"
)
head(cases_by_country_table)
cases_by_country_table$Year <- '2020'
#separate the column by whitespace
cases_by_country_table<- separate(data = cases_by_country_table, col = Date, into = c("Month", "Day"))
cases_by_country_table$Month <- match(cases_by_country_table$Month,month.abb)
cases_by_country_table$FullDate <-
paste(cases_by_country_table$Year,cases_by_country_table$Month,cases_by_country_table$Day,sep="/")
cases_by_country_table$FullDate2 <- as.Date(cases_by_country_table$FullDate, format = "%Y/%m/%d")
cases_by_country_table <- cases_by_country_table[,-c(2,3,5,6)]
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "FullDate2"] <- "Date"
cases_by_country_table <- cases_by_country_table[c(1,3,2)]
head(cases_by_country_table)
cases_by_country_table <- arrange(cases_by_country_table, Country, Date)
head(cases_by_country_table)
#5.2
cases_by_country_table_test<-cases_by_country_table
head(cases_by_country_table_test)
cases_by_country_table_test %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
#5.2
cases_by_country_table_test<-cases_by_country_table
cases_by_country_table_per <- cases_by_country_table_test %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
head(cases_by_country_table_test)
head(cases_by_country_table_test)
head(cases_by_country_table_test)
head(cases_by_country_table_test_per)
cases_by_country_table_per <- cases_by_country_table_test %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
head(cases_by_country_table_test)
head(cases_by_country_table_test_per)
cases_by_country_table_test %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
cases_by_country_table_per <- cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
head(cases_by_country_table_test_per)
#5.2
cases_by_country_table_test<-cases_by_country_table
#cases_by_country_table_per <-
cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
#cases_by_country_table_per <-
#cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = ([Cases-lag(Cases)]/abs(lag(Cases))) * 100)
#cases_by_country_table_per <-
#cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = ((Cases-lag(Cases))/abs(lag(Cases))) * 100)
#cases_by_country_table_per <-
#cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = ((Cases-lag(Cases))/lag(Cases)) * 100)
#cases_by_country_table_per <-
#cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = (Cases/lag(Cases) - 1) * 100)
cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = ((Cases-lag(Cases))/lag(Cases)))
url_a <- "https://en.wikipedia.org/wiki/COVID-19_pandemic_cases"
html_a <- read_html(url_a)
tables_a <- html_table(html_a, fill = TRUE)
length(tables_a)
cases_by_country_table <- url_a %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div[1]/table[3]') %>%
html_table(fill=TRUE)
cases_by_country_table <- cases_by_country_table[[1]] #extracts the first element from the list
head(cases_by_country_table)
#3.1
cases_by_country_table <- cases_by_country_table[-c(1:4),-c(2)] #Drops the first rows and the first case column
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "Date"] <- "Country"
#3.2 delete commas and convert to numeric
for(i in 2:11){
cases_by_country_table[,i] <-  as.numeric(gsub(",", "", cases_by_country_table[,i] )) #followed method from the lecture
}
#3.3
#cases_by_country_table_test <- cases_by_country_table
cases_by_country_table <- cases_by_country_table %>%
pivot_longer(
cols = -Country,
names_to = c('Date'),
#names_prefix = "X",
#names_sep = '.Q',
values_to = "Cases"
)
head(cases_by_country_table)
cases_by_country_table$Year <- '2020'
#separate the column by whitespace
cases_by_country_table<- separate(data = cases_by_country_table, col = Date, into = c("Month", "Day"))
cases_by_country_table$Month <- match(cases_by_country_table$Month,month.abb)
cases_by_country_table$FullDate <-
paste(cases_by_country_table$Year,cases_by_country_table$Month,cases_by_country_table$Day,sep="/")
cases_by_country_table$FullDate2 <- as.Date(cases_by_country_table$FullDate, format = "%Y/%m/%d")
cases_by_country_table <- cases_by_country_table[,-c(2,3,5,6)]
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "FullDate2"] <- "Date"
cases_by_country_table <- cases_by_country_table[c(1,3,2)]
head(cases_by_country_table)
cases_by_country_table_test %>% group_by(Country) %>% mutate(cases_percentage_change = round(((Cases-lag(Cases))/lag(Cases))*100),2)
d <- cases_by_country_table %>%
group_by(Country) %>%
mutate(cases_percentage_change = round((Cases - lag(Cases)) / lag(Cases) * 100, digits = 2) )
head(d)
cases_by_country_table <- cases_by_country_table %>%
group_by(Country) %>%
mutate(cases_percentage_change = round((Cases - lag(Cases)) / lag(Cases) * 100, digits = 2) )
head(cases_by_country_table )
url_a <- "https://en.wikipedia.org/wiki/COVID-19_pandemic_cases"
html_a <- read_html(url_a)
tables_a <- html_table(html_a, fill = TRUE)
length(tables_a)
cases_by_country_table <- url_a %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div[1]/table[3]') %>%
html_table(fill=TRUE)
cases_by_country_table <- cases_by_country_table[[1]] #extracts the first element from the list
head(cases_by_country_table)
#3.1
cases_by_country_table <- cases_by_country_table[-c(1:4),-c(2)] #Drops the first rows and the first case column
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "Date"] <- "Country"
#3.2 delete commas and convert to numeric
for(i in 2:11){
cases_by_country_table[,i] <-  as.numeric(gsub(",", "", cases_by_country_table[,i] )) #followed method from the lecture
}
#3.3
#cases_by_country_table_test <- cases_by_country_table
cases_by_country_table <- cases_by_country_table %>%
pivot_longer(
cols = -Country,
names_to = c('Date'),
#names_prefix = "X",
#names_sep = '.Q',
values_to = "Cases"
)
head(cases_by_country_table)
cases_by_country_table$Year <- '2020'
#separate the column by whitespace
cases_by_country_table<- separate(data = cases_by_country_table, col = Date, into = c("Month", "Day"))
cases_by_country_table$Month <- match(cases_by_country_table$Month,month.abb)
cases_by_country_table$FullDate <-
paste(cases_by_country_table$Year,cases_by_country_table$Month,cases_by_country_table$Day,sep="/")
cases_by_country_table$FullDate2 <- as.Date(cases_by_country_table$FullDate, format = "%Y/%m/%d")
#remove additional columns
cases_by_country_table <- cases_by_country_table[,-c(2,3,5,6)]
colnames(cases_by_country_table)[colnames(cases_by_country_table) == "FullDate2"] <- "Date"
cases_by_country_table <- cases_by_country_table[c(1,3,2)]
head(cases_by_country_table)
#5.1
cases_by_country_table <- arrange(cases_by_country_table, Country, Date)
head(cases_by_country_table)
#5.2
cases_by_country_table <- cases_by_country_table %>%
group_by(Country) %>%
mutate(cases_percentage_change = round((Cases - lag(Cases)) / lag(Cases) * 100, digits = 2) )
head(cases_by_country_table)
df <- d %>%
filter(Date == "2020-10-01",
Cases >= 100000) %>%
arrange(-cases_percentage_change) %>%
head(10)
df <- cases_by_country_table %>%
filter(Date == "2020-10-01",
Cases >= 100000) %>%
arrange(-cases_percentage_change) %>%
head(10)
df <- cases_by_country_table %>%
filter(Date == "2020-10-01",
Cases >= 100000) %>%
arrange(-cases_percentage_change) %>%
head(10)
View(df)
View(df)
df <- cases_by_country_table %>%
filter(Date == "2020-10-01",
Cases >= 100000) %>%
arrange(-cases_percentage_change)
head(df, 10)
top_ten <- cases_by_country_table %>%
filter(Date == "2020-10-01",
Cases >= 100000) %>%
arrange(-cases_percentage_change)
head(top_ten, 10)
library(RSelenium)
rD <- rsDriver(browser=c("firefox"))
driver <- rD$client
url <- "https://jobs.lse.ac.uk/LoginV2.aspx?enc=vDVLPY6BrOnmx9szwB5icMU/Bp97ap1BlI/jb0LhRYVeoh/cn5bYgvW+9EbbSw7a"
driver$navigate(url)
drop_down <- driver$findElement(using = "xpath", value = "[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ctl03_ctl01_PageSizeComboBox_Input']")
drop_down <- driver$findElement(using = "xpath", value = "//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ctl03_ctl01_PageSizeComboBox_Input']")
drop_down$highlightElement()
drop_down$highlightElement()
drop_down$highlightElement()
drop_down$highlightElement()
# 2. Clicking the drop-down menu
drop_down <- driver$findElement(using = "xpath", value = "//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ctl03_ctl01_PageSizeComboBox_Input']")
drop_down$clickElement()
drop_down_50 <- driver$findElement(using = "xpath", value = "//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ctl03_ctl01_PageSizeComboBox_DropDown']/div/ul/li[4]")
drop_down_50$highlightElement()
drop_down_50$highlightElement()
drop_down_50$highlightElement()
drop_down_50$clickElement()
job_title_list <- list()
item_count <- 1
paste0("//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ct", i, "_VacancyTitleLabel']")
i=104
paste0("//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ct", i, "_VacancyTitleLabel']")
job_XPath <- paste0("//*[@id='ctl00_CPH1_vcyS_v
# Create the XPath (using i) - some lines of code might be required
job_XPath <- paste0("//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ct", i, "_VacancyTitleLabel']") #paste0 removes the space
i=104
# Create the XPath (using i) - some lines of code might be required
job_XPath <- paste0("//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ct", i, "_VacancyTitleLabel']") #paste0 removes the space
job_XPath
# Find the element on the website and transform it to text directly
current_job_title <- driver$findElement(using = "xpath",
value = job_XPath)$getElementText()[[1]]
job_XPath
current_job_title <- driver$findElement(using = "xpath",
value = "//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ctl04_VacancyTitleLabel']")$getElementText()[[1]]
urrent_job_title
current_job_title
job_XPath <- paste0("//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ct", i, "_VacancyTitleLabel']") #paste0 removes the space
# Find the element on the website and transform it to text directly
current_job_title <- driver$findElement(using = "xpath",
value = job_XPath)$getElementText()[[1]]
job_XPath
# Find the element on the website and transform it to text directly
current_job_title <- driver$findElement(using = "xpath",
value = paste0("\\"",job_XPath,"\\""))$getElementText()[[1]]
# Find the element on the website and transform it to text directly
current_job_title <- driver$findElement(using = "xpath",
value = paste0('"',job_XPath,'"'))$getElementText()[[1]]
# Create the XPath (using i) - some lines of code might be required
job_XPath <- paste0('"//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ct', i, '_VacancyTitleLabel']"') #paste0 removes the space
# Create the XPath (using i) - some lines of code might be required
job_XPath <- paste0('//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ct', i, '_VacancyTitleLabel']') #paste0 removes the space
# Create the XPath (using i) - some lines of code might be required
job_XPath <- paste0("'//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ct",i,"_VacancyTitleLabel']'")
# Find the element on the website and transform it to text directly
current_job_title <- driver$findElement(using = "xpath",
value = paste0('"',job_XPath,'"'))$getElementText()[[1]]
# Find the element on the website and transform it to text directly
current_job_title <- driver$findElement(using = "xpath",
value = job_XPath)$getElementText()[[1]]
# Create the XPath (using i) - some lines of code might be required
job_XPath <- paste0("'//*[@id='ctl00_CPH1_vcyS_vsGrid_ctl00_ct",i,"_VacancyTitleLabel']'")
# Find the element on the website and transform it to text directly
current_job_title <- driver$findElement(using = "xpath",
value = job_XPath)$getElementText()[[1]]
